0.99*0.001/(0.99*0.001+(1-0.99)*(1-0.001))
(0.99*0.001)/(0.99*0.001+(1-0.99)*(1-0.001))
(0.99*0.001)/((0.99*0.001)+(1-0.99)*(1-0.001))
100000-100
99900*0.01
?plotOutput
library(shiny)
?plotOutput
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?llines
?axis
?llines
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
?splom
?trellis.par.set
?par
library(datasets)
data(airquality)
install.packages("ggplot2")
library(ggplot2)
?transform
airquality = transform(airquality, Month = factor(Month))
View(airquality)
?factor
class(airquality$Month)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies, smooth = "loess)
ppois(16, lambda=12)
source('C:/Users/Cuong/Google Drive/Desktop/Data Science/Statistical Inferences/Quiz2.R')
ppois(16, lambda=12)
pnorm(16,mean=15,sd=10)
pnorm(16,mean=16,sd=10)-pnorm(16,mean=14,sd=10)
pnorm(16,mean=15,sd=10)-pnorm(14,mean=15,sd=10)
pnorm(16,mean=15,sd=1)-pnorm(14,mean=15,sd=1)
0.5^5
5*0.5^5
5*(0.5^5)
0.5*0.5*0.5*0.5*0.5
6*(0.5^5)
# Question 1
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y~x)
summary(fit)
source('C:/Users/Cuong/Google Drive/Desktop/Data Science/Regression Models/Quiz2.R')
source('C:/Users/Cuong/Google Drive/Desktop/Data Science/Regression Models/Quiz2.R', echo=TRUE)
mtcars$wt
source('C:/Users/Cuong/Google Drive/Desktop/Data Science/Regression Models/Quiz2.R')
?summary
?summary
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
f <- lm(y ~ x)
summary(f)
?predict
data(mtcars)
x<-mtcars$wt
y<-mtcars$mpg
fit<-lm(y ~ x)
predict(fit,data.frame(x=mean(x)), interval="confidence")
data.frame(x=mean(x)
)
mean(x)
predict(fit,mean(x))
predict(fit,mean(x),interval="confidence")
predict(fit,data.frame(mean(x)),interval="confidence")
data(mtcars)
x<-mtcars$wt
y<-mtcars$mpg
fit<-lm(y ~ x)
predict(fit,mean(x),interval="confidence")
predict(fit,data.frame(x=mean(x)), interval="confidence")
class(data.frame(x=mean(x)))
class(mean(x))
predict(fit,x=mean(x), interval="confidence")
predict(fit,mean(x), interval="confidence")
nchar("c94f3844605a27ed5091d638e78f88f73070e98f")
library(datasets)
data(iris)
s<-split(iris,iris$Species)
lapply(s,function(x) colMeans(x[,c("Sepal.Length","Sepal.Width","Petal.Length","Petal.Width")]))
?lapply
library(datasets)
data(mtcars)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$mpg, mtcars$cyl, mean)
with(mtcars, tapply(hp, cyl, mean))
tapply(mtcars$hp, mtcars$cyl, mean)
209.21429-82.63636
debug(ls)
ls
ls
ls
mean
ls
debug(ls)
ls
ls
debug(mean)
?debug
data(mtcars)
attach(mtcars)
fit <- lm(mpg ~ as.factor(cyl) + wt, data=mtcars)
summary(fit) # as.factor(cyl)8 -6.0709
fit2 <- lm(mpg ~ as.factor(cyl), data=mtcars)
summary(fit2)$coef[3] # -11.56364
summary(fit)$coef[3] # -6.07086
summary(fit)
fit3 <- lm(mpg ~ as.factor(cyl)*wt, data=mtcars)
fit3
?solve
data=rbind(c(1, -1/4), c(-1/4, 1))
inv <- solve(data) %*% data
data
inv
inv <- solve(data, ...)
x=rbind(c(1, -1/4), c(-1/4, 1))
data <- x$get()
source('C:/Users/Cuong/Google Drive/Desktop/Data Science/R Programming/Assgn2/cachematrix.R')
data <- x$get()
get <- function() x
data <- x$get()
x
data <- get()
inv <- solve(data, ...)
inv <- solve(data)
inv
makeCacheMatrix(x)
cacheSolve(x)
data
solve(data)%*%data
inv<-solve(data)
inv*data
data*inv
ind<-solve(data)%*%data
inv<-ind/data
inv
data*ind
x=rbind(c(1, -1/4), c(-1/4, 1))
x
x=rbind(c(4, 7), c(2, 6))
x
data <- x$get()
class(x)
a<-makeCacheMatrix(x)
source('C:/Users/Cuong/Google Drive/Desktop/Data Science/R Programming/Assgn2/cachematrix.R')
cacheSolve(a)
cacheSolve(a)
source('C:/Users/Cuong/Google Drive/Desktop/Data Science/R Programming/Assgn2/cachematrix.R')
library(datasets)
data(ToothGrowth)
View(ToothGrow)
head(ToothGrowth)
str(ToothGrowth)
?confint
View(ToothGrowth)
fit <- lm(len ~ supp, data=ToothGrowth)
confint(fit)
fit <- lm(len ~ dose + supp, data=ToothGrowth)
confint(fit)
fit <- lm(len ~ dose, data=ToothGrowth)
confint(fit)
fit <- lm(len ~ supp+dose, data=ToothGrowth)
confint(fit)
fit <- lm(len ~ supp, data=ToothGrowth)
confint(fit)
summary(fit)
fit <- lm(len ~ dose+supp, data=ToothGrowth)
confint(fit)
fit <- lm(len ~ dose, data=ToothGrowth)
confint(fit)
fit <- lm(len ~ dose+supp, data=ToothGrowth[ToothGrowth$supp=="VC"])
ToothGrowth$supp
class(ToothGrowth$supp)
as.numeric(ToothGrowth$supp)
fit <- lm(len ~ dose+supp, data=ToothGrowth[ToothGrowth$supp==1])
ToothGrowth[ToothGrowth$supp==1]
z <- ToothGrowth[ToothGrowth$supp==1]
View(z)
ToothGrowth[as.numeric(ToothGrowth$supp)==1]
ToothGrowth[(as.numeric(ToothGrowth$supp) == 1),]
z <- ToothGrowth[as.numeric(ToothGrowth$supp)==1,]
View(z)
fit <- lm(len ~ dose+supp, data=z)
fit <- lm(len ~ dose, data=z)
confint(fit)
fit <- lm(len ~ dose+supp, data=ToothGrowth)
confint(fit)
fit <- lm(len ~ dose+supp, data=ToothGrowth)
confint(fit)
?anova
fullModel <- lm(mpg ~ ., data=mtcars)
summary(fullModel) # results hidden
stepModel <- step(fullModel, k=log(nrow(mtcars)))
summary(stepModel)
fullModel <- lm(mpg ~ ., data=mtcars)
summary(fullModel) # results hidden
stepModel <- step(fullModel, k=log(nrow(mtcars)))
summary(stepModel)
amIntWtModel<-lm(mpg ~ wt + qsec + am + wt:am, data=mtcars)
summary(amIntWtModel)
amModel<-lm(mpg ~ am, data=mtcars)
summary(amModel) # results hidden
14.079 + (-4.141)*2000
summary(amIntWtModel)$coef
14.079 + (-4.141)*2
14.079 + (-4.141)*3
training <- read.csv("pml-training.csv", na.strings=c(#DIV/0!",""))
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='umdocc',
token='4E0EEA384CCDA177C4E179174C19E635',
secret='<SECRET>')
shinyapps::setAccountInfo(name='umdocc',
token='4E0EEA384CCDA177C4E179174C19E635',
secret='<SECRET>')
shinyapps::setAccountInfo(name='umdocc',
token='4E0EEA384CCDA177C4E179174C19E635',
secret='<SECRET>')
Sys.setlocale(locale="en_US.UTF-8")
Sys.setlocale(locale="English")
shinyapps::setAccountInfo(name='umdocc',
token='4E0EEA384CCDA177C4E179174C19E635',
secret='<SECRET>')
shinyapps::setAccountInfo(name='umdocc',
token='4E0EEA384CCDA177C4E179174C19E635',
secret='GM6euU4/Qbop5ni79pOHxL/GPRkLkfZF5/TOqpNx')
library(shinyapps)
shinyapps::deployApp('project')
setwd("C:/Users/Cuong/Google Drive/Desktop/Data Science/Developing Data Products")
shinyapps::deployApp('path/to/your/app')
shinyapps::deployApp('project')
shinyapps::deployApp('project')
runApp("project")
library(shiny)
runApp("project")
shinyapps::deployApp('project')
